<Window x:Class="PrintFolderSelect.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PrintFolderSelect"
        mc:Ignorable="d"
        Title="MainWindow" Background="Gainsboro" Width="{Binding Source={x:Static SystemParameters.PrimaryScreenWidth}, Converter={local:RatioConverter}, ConverterParameter='0.6'}"  
        Height="{Binding Source={x:Static SystemParameters.PrimaryScreenHeight}, Converter={local:RatioConverter}, ConverterParameter='0.4'}"  ResizeMode="CanMinimize"  FontSize="10" Topmost="False" FontWeight="Normal" ShowInTaskbar="True"
         BorderBrush="Black"  AllowsTransparency="True" WindowStartupLocation="CenterScreen" WindowStyle="None"  Style="{DynamicResource WindowStyle1}" >

    <Window.Resources>
        <!--///////////////////////////////////////////WINDOW STYLE//////////////////////////////////////////////////////////////////////////////////////////-->
        <ControlTemplate x:Key="WindowTemplateKey" TargetType="{x:Type Window}">
            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0.5" Background="{TemplateBinding Background}">
                <Grid>
                    <AdornerDecorator>
                        <ContentPresenter/>
                    </AdornerDecorator>
                    <ResizeGrip x:Name="WindowResizeGrip" HorizontalAlignment="Right" IsTabStop="false" Visibility="Collapsed" VerticalAlignment="Bottom"/>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="ResizeMode" Value="CanResizeWithGrip"/>
                        <Condition Property="WindowState" Value="Normal"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Visibility" TargetName="WindowResizeGrip" Value="Visible"/>
                </MultiTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="WindowStyle1" TargetType="{x:Type Window}">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Window}">
                        <Border CornerRadius="15" BorderBrush="Blue" BorderThickness="4" Background="{TemplateBinding Background}">
                            <AdornerDecorator>
                                <ContentPresenter/>
                            </AdornerDecorator>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="ResizeMode" Value="CanResizeWithGrip">
                    <Setter Property="Template" Value="{StaticResource WindowTemplateKey}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <!--////////////////////////////////////////////TEXTBOX STYLE//////////////////////////////////////////////////////////////////////////////////////////-->
        <SolidColorBrush x:Key="TextBox.Static.Border" Color="Blue"/>
        <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#00CC00"/>
        <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#00CC00"/>
        <Style x:Key="TextBoxStyle1" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="0.5"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" CornerRadius="5" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
        <!--///////////////////////////////////////////BUTTON STYLE////////////////////////////////////////////////////////////////////////////////////////////-->
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#01D758"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="Blue"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#00FF00"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#000000"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="0.5"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="14"  BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Viewbox Stretch="Fill"  >
        <Grid x:Name="BazaPrint" >
            <Grid.RowDefinitions>
                <RowDefinition Height="0.5*" />
                <RowDefinition Height="0.5*" />
                <RowDefinition Height="0.5*" />
                <RowDefinition Height="0.5*" />
                <RowDefinition Height="0.5*" />
                <RowDefinition Height="0.5*" />
                <RowDefinition Height="0.5*" />

            </Grid.RowDefinitions>
            <!--=============================================================================================================================-->
            <!-- BLOK cu cimpurile (valorile) de folosire a datelor anterior salvate (salvate in fisiere .json) -->
            <!--=============================================================================================================================-->
            <!--=============================================================================================================================-->
            <GridSplitter x:Name="linie1" Grid.Row="0" ShowsPreview="False" Height="0.5" Background="Black" Visibility="Hidden"
                          HorizontalAlignment="Stretch"  VerticalAlignment="Center"/>
            <WrapPanel  x:Name="bost" Grid.Row="1">
            <!--Grid.Row="0"-->
            <Button x:Name="buttonNew" Content="N O U" FontSize="6" HorizontalAlignment="Left" VerticalAlignment="Center" Width="80" Height="10" 
                      Margin="20,2,10,2" FontWeight="Bold"  Style="{DynamicResource ButtonStyle1}" Click="buttonNew_Click" />
            <TextBlock x:Name="textBlockTitle" Height="auto" Width="auto" HorizontalAlignment="Center" Margin="70,2,2,4"
                           Text="P R I N T A R E    M U L T I P L A" FontWeight="Bold" FontSize="10"/>
            <Button x:Name="buttonExit" Content="I E Ș I R E" FontSize="6" HorizontalAlignment="Right" VerticalAlignment="Center" Width="80" Height="10" 
                    Margin="102,2,10,2" FontWeight="Bold" Style="{DynamicResource ButtonStyle1}" Click="buttonExit_Click"/>
             </WrapPanel>
            <!--=============================================================================================================================-->

            <GridSplitter x:Name="linie2" Grid.Row="2" ShowsPreview="False" Height="0.5" Background="Black"
                          HorizontalAlignment="Stretch"  VerticalAlignment="Center"/>

            <!--=============================================================================================================================-->


            <!--=============================================================================================================================-->
            <WrapPanel   x:Name="w14" Grid.Row="3">
                <TextBlock x:Name="FolderPath2" TextWrapping="Wrap" Text="M A P A /c a l e a/ " Width="90" Height="auto" Margin="20,2,0,2" FontSize="9" FontWeight="Bold" />

                <TextBox x:Name="textBox_calea" Visibility="Visible"   HorizontalAlignment="Center" Height="10"  Width="280" TextWrapping="Wrap" VerticalAlignment="Center"  Background="Black"               
                         Margin="10,2,20,2" VerticalScrollBarVisibility="Hidden"  IsEnabled="False" FontWeight="Bold" FontSize="8" Text="adresa mapei pentru printare" TextAlignment="Left" Padding="0"
                         Style="{DynamicResource TextBoxStyle1}" HorizontalScrollBarVisibility="Auto"  Opacity="1" Foreground="White" FontStyle="Normal" />

                <Button x:Name="buttonSearch2"  Content="A L E G E" FontSize="6" Foreground="Yellow"  Margin="10,2,10,2"
                        Style="{DynamicResource ButtonStyle1}" Background="SteelBlue" FontWeight="Bold" Height="10"  Width="80" Click="buttonSearch2_Click"  />

                <!--   <Button x:Name="buttonOKpath" Content="O K" HorizontalAlignment="Left" VerticalAlignment="Top" Width="80" Height="10" Foreground="Yellow"  
                        Style="{DynamicResource ButtonStyle1}" Background="SteelBlue" Margin="30,5,0,4" FontSize="6"  FontWeight="Bold"  /> -->

            </WrapPanel>

            <!--=============================================================================================================================-->
            <GridSplitter x:Name="linie3" Grid.Row="4" ShowsPreview="False" Height="0.5" Background="Black"
                          HorizontalAlignment="Stretch"  VerticalAlignment="Center"/>
            <!--=============================================================================================================================-->
            <WrapPanel  x:Name="w17" Grid.Row="5">
                <Button x:Name="buttonPrint" Content="P R I N T E A Z Ă" FontSize="6" HorizontalAlignment="Left" VerticalAlignment="Top" Width="80" Height="10"
                        Style="{DynamicResource ButtonStyle1}" Margin="20,5,20,5"  FontWeight="Bold" Click="buttonPrint_Click" />

                <Button x:Name="buttonClear" Content="C U R Ă Ț Ă" FontSize="6" HorizontalAlignment="Right" VerticalAlignment="Top" Width="80" Height="10" 
                        Style="{DynamicResource ButtonStyle1}" Margin="310,5,20,5"  FontWeight="Bold" Click="buttonClear_Click" />
            </WrapPanel>
            <GridSplitter x:Name="linie4" Grid.Row="6" ShowsPreview="False" Height="0.5" Background="Black" Visibility="Hidden"
                          HorizontalAlignment="Stretch"  VerticalAlignment="Center"/>
        </Grid>
    </Viewbox>

</Window>

<!--
    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
    -->